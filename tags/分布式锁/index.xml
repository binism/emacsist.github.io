<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>分布式锁 on emacsist</title>
    <link>https://emacsist.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link>
    <description>Recent content in 分布式锁 on emacsist</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 06 May 2016 16:31:39 +0000</lastBuildDate>
    
	<atom:link href="https://emacsist.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>基于Redis分布式锁Redisson使用例子</title>
      <link>https://emacsist.github.io/2016/05/06/%E5%9F%BA%E4%BA%8Eredis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81redisson%E4%BD%BF%E7%94%A8%E4%BE%8B%E5%AD%90/</link>
      <pubDate>Fri, 06 May 2016 16:31:39 +0000</pubDate>
      
      <guid>https://emacsist.github.io/2016/05/06/%E5%9F%BA%E4%BA%8Eredis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81redisson%E4%BD%BF%E7%94%A8%E4%BE%8B%E5%AD%90/</guid>
      <description>@Test public void testDistributeLock() throws InterruptedException { final CountDownLatch cdl = new CountDownLatch(10); long time = System.currentTimeMillis(); RedissonClient redisson = Redisson.create(); final RLock rLock = redisson.getLock(&amp;quot;hello-lock&amp;quot;); final Map&amp;lt;String, Integer&amp;gt; map = new HashMap&amp;lt;&amp;gt;(1); map.put(&amp;quot;hello&amp;quot;, 0); for (int i = 0; i &amp;lt; 10; i++) { new Thread(new Runnable() { @Override public void run() { rLock.lock(10, TimeUnit.SECONDS); map.put(&amp;quot;hello&amp;quot;, map.get(&amp;quot;hello&amp;quot;) + 1); rLock.unlock(); cdl.countDown(); } }).start(); } cdl.await(); System.out.println(&amp;quot;result -&amp;gt;&amp;quot; + map.get(&amp;quot;hello&amp;quot;));</description>
    </item>
    
  </channel>
</rss>